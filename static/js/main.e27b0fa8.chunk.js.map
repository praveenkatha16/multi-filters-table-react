{"version":3,"sources":["data/tableData.js","hooks/useCsvData.js","hooks/useMultiFilter.js","MyDropdown.js","App.js","index.js"],"names":["getColumns","columns","map","name","selector","row","small","path","large","useCsvData","filePath","_useState","useState","_useState2","_slicedToArray","data","setData","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fetch","then","res","text","csv","fromString","sent","stop","apply","arguments","useEffect","fetchData","useMultiFilter","filterValue","setFilterValue","filteredData","filteredColumns","filter","col","undefined","length","item","every","includes","options","reduce","_objectSpread","_defineProperty","column","_toConsumableArray","Set","getOptions","columnFilter","icon","_jsx","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","LISTBOX_PADDING","renderRow","props","index","style","_data$index","itemProps","selected","inlineStyle","top","_jsxs","Typography","component","noWrap","children","Checkbox","marginRight","checked","OuterElementContext","React","OuterElementType","ref","outerProps","ListboxComponent","other","_objectWithoutProperties","_excluded","itemData","forEach","push","theme","useTheme","smUp","useMediaQuery","breakpoints","up","noSsr","itemCount","itemSize","getChildSize","child","gridRef","current","resetAfterIndex","useResetCache","Provider","value","VariableSizeList","height","width","outerElementType","innerElementType","overscanCount","StyledPopper","styled","Popper","concat","autocompleteClasses","listbox","boxSizing","padding","margin","AutocompleteDropdown","_ref","placeholder","onChange","Autocomplete","sx","disableListWrap","multiple","_","newValue","PopperComponent","renderInput","params","TextField","label","renderOption","option","_ref2","customStyles","tableWrapper","display","App","_datasets$large","datasets","_useMultiFilter","_useMultiFilter2","onFilterChange","className","DataTable","pagination","paginationPerPage","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"8JAAA,SAASA,EAAWC,GAClB,OAAOA,EAAQC,KAAI,SAACC,GAAI,MAAM,CAC5BA,OACAC,SAAU,SAACC,GAAG,OAAKA,EAAIF,EAAK,EAC7B,GACH,CAEe,OACbG,MAAO,CACLC,KAAM,sBACNN,QAASD,EAAW,CAAC,SAAU,OAAQ,OAAQ,OAAQ,UAEzDQ,MAAO,CACLD,KAAM,sBACNN,QAASD,EAAW,CAAC,SAAU,SAAU,UAAW,e,wBCXzC,SAASS,EAAWC,GACjC,IAAAC,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEI,SAAAI,IAKvB,OALuBA,EAAAC,YAAAC,cAAAC,MAAxB,SAAAC,IAAA,IAAAN,EAAA,OAAAI,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBC,MAAMhB,GACtBiB,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACE,GAAI,OAAKC,IAAMC,WAAWF,EAAK,IAAE,KAAD,EAFnCd,EAAIQ,EAAAS,KAGVhB,EAAQD,GAAM,wBAAAQ,EAAAU,OAAA,GAAAZ,EAAA,KACfJ,EAAAiB,MAAA,KAAAC,UAAA,CAMD,OAJAC,qBAAU,YAT2B,WAEbnB,EAAAiB,MAAC,KAADC,UAAA,CAQtBE,EACF,GAAG,IAEItB,CACT,C,2BChBe,SAASuB,EAAevB,EAAMd,GAC3C,IAAAU,EAAsCC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAA,GAA3C4B,EAAW1B,EAAA,GAAE2B,EAAc3B,EAAA,GASlC,IAAM4B,EAgCR,SAAgB1B,EAAMd,EAASsC,GAC7B,IAAMG,EAAkBzC,EAAQ0C,QAC9B,SAACC,GAAG,OACwB,OAA1BL,EAAYK,EAAIzC,YACU0C,IAA1BN,EAAYK,EAAIzC,SACdoC,EAAYK,EAAIzC,MAAM2C,MAAM,IAG5BL,EAAeC,EAAgBI,OACjC/B,EAAK4B,QAAO,SAACI,GAAI,OACfL,EAAgBM,OAAM,SAACJ,GAAG,OACxBL,EAAYK,EAAIzC,MAAM8C,SAASL,EAAIxC,SAAS2C,GAAM,GACnD,IAEHhC,EACJ,OAAO0B,CACT,CAhDuBE,CAAO5B,EAAMd,EAASsC,GAErCW,EAAUjD,EAAQkD,QACtB,SAACD,EAASN,GAAG,OAAAQ,wBAAA,GACRF,GAAO,GAAAG,YAAA,GACTT,EAAIzC,KAOX,SAAoBY,EAAMd,EAASsC,EAAae,GAC9C,IAAMZ,EAAkBzC,EAAQ0C,QAC9B,SAACC,GAAG,OACFA,EAAIzC,OAASmD,EAAOnD,MACM,OAA1BoC,EAAYK,EAAIzC,YACU0C,IAA1BN,EAAYK,EAAIzC,SACdoC,EAAYK,EAAIzC,MAAM2C,MAAM,IAG5BL,EAAeC,EAAgBI,OACjC/B,EAAK4B,QAAO,SAACI,GAAI,OACfL,EAAgBM,OAAM,SAACJ,GAAG,OACxBL,EAAYK,EAAIzC,MAAM8C,SAASL,EAAIxC,SAAS2C,GAAM,GACnD,IAEHhC,EAEJ,OAAAwC,YAAW,IAAIC,IAAIf,EAAavC,IAAIoD,EAAOlD,WAC7C,CAzBkBqD,CAAW1C,EAAMd,EAASsC,EAAaK,IAAI,GAEzD,CAAC,GAEH,MAAO,CAACH,EAAcS,EAhBtB,SAAwBI,EAAQI,GAC9BlB,GAAe,SAACD,GAAW,OAAAa,wBAAA,GACtBb,GAAW,GAAAc,YAAA,GACbC,EAAOnD,KAAOuD,GAAY,GAE/B,EAYF,C,2JCVMC,EAAOC,cAACC,IAAwB,CAACC,SAAS,UAC1CC,EAAcH,cAACI,IAAY,CAACF,SAAS,UAErCG,EAAkB,EAExB,SAASC,EAAUC,GACjB,IAAQpD,EAAuBoD,EAAvBpD,KAAMqD,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MACrBC,EAAAxD,YAAoCC,EAAKqD,GAAM,GAAxCG,EAASD,EAAA,GAAEzC,EAAIyC,EAAA,GAAEE,EAAQF,EAAA,GAC1BG,EAAWrB,wBAAA,GACZiB,GAAK,IACRK,IAAKL,EAAMK,IAAMT,IAGnB,OACEU,eAACC,IAAUxB,wBAAA,CAACyB,UAAU,MAASN,GAAS,IAAEO,QAAM,EAACT,MAAOI,EAAYM,SAAA,CAClEnB,cAACoB,IAAQ,CACPrB,KAAMA,EACNI,YAAaA,EACbM,MAAO,CAAEY,YAAa,GACtBC,QAASV,IAEV3C,KAGP,CAEA,IAAMsD,EAAsBC,gBAAoB,CAAC,GAE3CC,EAAmBD,cAAiB,SAACjB,EAAOmB,GAChD,IAAMC,EAAaH,aAAiBD,GACpC,OAAOvB,cAAA,MAAAR,wBAAA,CAAKkC,IAAKA,GAASnB,GAAWoB,GACvC,IAaA,IAAMC,EAAmBJ,cAAiB,SACxCjB,EACAmB,GAEA,IAAQP,EAAuBZ,EAAvBY,SAAaU,EAAKC,YAAKvB,EAAKwB,GAC9BC,EAAW,GACjBb,EAASc,SAAQ,SAAC9C,GAChB6C,EAASE,KAAK/C,GACd6C,EAASE,KAAI5D,MAAb0D,EAAQrC,YAAUR,EAAKgC,UAAY,IACrC,IAEA,IAAMgB,EAAQC,cACRC,EAAOC,YAAcH,EAAMI,YAAYC,GAAG,MAAO,CACrDC,OAAO,IAEHC,EAAYV,EAAS9C,OACrByD,EAAWN,EAAO,GAAK,GAEvBO,EAAe,SAACC,GACpB,OAAOF,CACT,EASMG,EAxCR,SAAuB3F,GACrB,IAAMuE,EAAMF,SAAa,MAMzB,OALAA,aAAgB,WACK,MAAfE,EAAIqB,SACNrB,EAAIqB,QAAQC,gBAAgB,GAAG,EAEnC,GAAG,CAAC7F,IACGuE,CACT,CAgCkBuB,CAAcP,GAE9B,OACE1C,cAAA,OAAK0B,IAAKA,EAAIP,SACZnB,cAACuB,EAAoB2B,SAAQ,CAACC,MAAOtB,EAAMV,SACzCnB,cAACoD,IAAgB,CACfpB,SAAUA,EACVqB,QAbFX,EAAY,EACP,EAAIC,EAEND,EAAYC,GAUS,EAAItC,EAC1BiD,MAAM,OACN5B,IAAKoB,EACLS,iBAAkB9B,EAClB+B,iBAAiB,KACjBb,SAAU,SAACnC,GAAK,OAAKoC,EAAaZ,EAASxB,GAAO,EAClDiD,cAAe,EACff,UAAWA,EAAUvB,SAEpBb,OAKX,IAEMoD,EAAeC,YAAOC,IAAPD,CAAclE,YAAC,CAAC,EAAF,MAAAoE,OAC1BC,IAAoBC,SAAY,CACrCC,UAAW,aACX,OAAQ,CACNC,QAAS,EACTC,OAAQ,MAKC,SAASC,EAAoBC,GAIxC,IAHFC,EAAWD,EAAXC,YACA/E,EAAO8E,EAAP9E,QACAgF,EAAQF,EAARE,SAEA,OACEtE,cAACuE,IAAY,CACXC,GAAI,CAAElB,MAAO,KACbmB,iBAAe,EACfC,UAAQ,EACRJ,SAAU,SAACK,EAAGC,GACZN,EAASM,EACX,EACAC,gBAAiBnB,EACjB9B,iBAAkBA,EAClBtC,QAASA,EACTwF,YAAa,SAACC,GAAM,OAAK/E,cAACgF,IAASxF,wBAAA,GAAKuF,GAAM,IAAEE,MAAOZ,IAAe,EACtEa,aAAc,SAAC3E,EAAO4E,EAAMC,GAAY,MAAO,CAAC7E,EAAO4E,EAAfC,EAARxE,SAAwC,GAG9E,C,sBCnIMyE,EAAe,CACnBC,aAAc,CACZ7E,MAAO,CACL8E,QAAS,QACTlC,OAAQ,UAKC,SAASmC,IACtB,IAAAC,EAA0BC,EAAS9I,MAA3BP,EAAOoJ,EAAPpJ,QAGRsJ,EAAgDjH,EADnC7B,EAFQ4I,EAAJ9I,MAGoDN,GAAQuJ,EAAA1I,YAAAyI,EAAA,GAAtE9G,EAAY+G,EAAA,GAAEtG,EAAOsG,EAAA,GAAEC,EAAcD,EAAA,GAE5C,OACE7E,eAAA,OAAK+E,UAAU,MAAK3E,SAAA,CAClBnB,cAAA,OAAK8F,UAAU,UAAS3E,SACrB9E,EAAQC,KAAI,SAACoD,GAAM,OAClBM,cAACmE,EAAoB,CAEnBE,YAAa3E,EAAOnD,KACpB+H,SAAU,SAAC3F,GAAW,OAAKkH,EAAenG,EAAQf,EAAY,EAC9DW,QAASA,EAAQI,EAAOnD,OAHnBmD,EAAOnD,KAIZ,MAINyD,cAAC+F,IAAS,CACR1J,QAASA,EACTc,KAAM0B,EACNiH,UAAU,QACVE,YAAU,EACVX,aAAcA,EACdY,kBAAmB,QAI3B,CCxCA,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACHtG,cAACuG,aAAU,CAAApF,SACTnB,cAACwF,EAAG,M","file":"static/js/main.e27b0fa8.chunk.js","sourcesContent":["function getColumns(columns) {\n  return columns.map((name) => ({\n    name,\n    selector: (row) => row[name],\n  }));\n}\n\nexport default {\n  small: {\n    path: \"./dataset_small.csv\",\n    columns: getColumns([\"number\", \"mod3\", \"mod4\", \"mod5\", \"mod6\"]),\n  },\n  large: {\n    path: \"./dataset_large.csv\",\n    columns: getColumns([\"number\", \"mod350\", \"mod8000\", \"mod20002\"]),\n  },\n};\n","import * as csv from \"csvtojson\";\nimport { useEffect, useState } from \"react\";\n\nexport default function useCsvData(filePath) {\n  const [data, setData] = useState([]);\n\n  async function fetchData() {\n    const data = await fetch(filePath)\n      .then((res) => res.text())\n      .then((text) => csv().fromString(text));\n    setData(data);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return data;\n}\n","import { useState } from \"react\";\n\nexport default function useMultiFilter(data, columns) {\n  const [filterValue, setFilterValue] = useState({});\n\n  function onFilterChange(column, columnFilter) {\n    setFilterValue((filterValue) => ({\n      ...filterValue,\n      [column.name]: columnFilter,\n    }));\n  }\n\n  const filteredData = filter(data, columns, filterValue);\n\n  const options = columns.reduce(\n    (options, col) => ({\n      ...options,\n      [col.name]: getOptions(data, columns, filterValue, col),\n    }),\n    {}\n  );\n  return [filteredData, options, onFilterChange];\n}\n\nfunction getOptions(data, columns, filterValue, column) {\n  const filteredColumns = columns.filter(\n    (col) =>\n      col.name !== column.name &&\n      filterValue[col.name] !== null &&\n      filterValue[col.name] !== undefined &&\n      !!filterValue[col.name].length\n  );\n\n  const filteredData = filteredColumns.length\n    ? data.filter((item) =>\n        filteredColumns.every((col) =>\n          filterValue[col.name].includes(col.selector(item))\n        )\n      )\n    : data;\n\n  return [...new Set(filteredData.map(column.selector))];\n}\n\nfunction filter(data, columns, filterValue) {\n  const filteredColumns = columns.filter(\n    (col) =>\n      filterValue[col.name] !== null &&\n      filterValue[col.name] !== undefined &&\n      !!filterValue[col.name].length\n  );\n\n  const filteredData = filteredColumns.length\n    ? data.filter((item) =>\n        filteredColumns.every((col) =>\n          filterValue[col.name].includes(col.selector(item))\n        )\n      )\n    : data;\n  return filteredData;\n}\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { autocompleteClasses } from \"@mui/material/Autocomplete\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport Popper from \"@mui/material/Popper\";\nimport { useTheme, styled } from \"@mui/material/styles\";\nimport { VariableSizeList } from \"react-window\";\nimport Typography from \"@mui/material/Typography\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst LISTBOX_PADDING = 8; // px\n\nfunction renderRow(props) {\n  const { data, index, style } = props;\n  const [itemProps, text, selected] = data[index];\n  const inlineStyle = {\n    ...style,\n    top: style.top + LISTBOX_PADDING,\n  };\n\n  return (\n    <Typography component=\"li\" {...itemProps} noWrap style={inlineStyle}>\n      <Checkbox\n        icon={icon}\n        checkedIcon={checkedIcon}\n        style={{ marginRight: 8 }}\n        checked={selected}\n      />\n      {text}\n    </Typography>\n  );\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n  const outerProps = React.useContext(OuterElementContext);\n  return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (ref.current != null) {\n      ref.current.resetAfterIndex(0, true);\n    }\n  }, [data]);\n  return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\n  props,\n  ref\n) {\n  const { children, ...other } = props;\n  const itemData = [];\n  children.forEach((item) => {\n    itemData.push(item);\n    itemData.push(...(item.children || []));\n  });\n\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up(\"sm\"), {\n    noSsr: true,\n  });\n  const itemCount = itemData.length;\n  const itemSize = smUp ? 36 : 48;\n\n  const getChildSize = (child) => {\n    return itemSize;\n  };\n\n  const getHeight = () => {\n    if (itemCount > 8) {\n      return 8 * itemSize;\n    }\n    return itemCount * itemSize;\n  };\n\n  const gridRef = useResetCache(itemCount);\n\n  return (\n    <div ref={ref}>\n      <OuterElementContext.Provider value={other}>\n        <VariableSizeList\n          itemData={itemData}\n          height={getHeight() + 2 * LISTBOX_PADDING}\n          width=\"100%\"\n          ref={gridRef}\n          outerElementType={OuterElementType}\n          innerElementType=\"ul\"\n          itemSize={(index) => getChildSize(itemData[index])}\n          overscanCount={5}\n          itemCount={itemCount}\n        >\n          {renderRow}\n        </VariableSizeList>\n      </OuterElementContext.Provider>\n    </div>\n  );\n});\n\nconst StyledPopper = styled(Popper)({\n  [`& .${autocompleteClasses.listbox}`]: {\n    boxSizing: \"border-box\",\n    \"& ul\": {\n      padding: 0,\n      margin: 0,\n    },\n  },\n});\n\nexport default function AutocompleteDropdown({\n  placeholder,\n  options,\n  onChange,\n}) {\n  return (\n    <Autocomplete\n      sx={{ width: 300 }}\n      disableListWrap\n      multiple\n      onChange={(_, newValue) => {\n        onChange(newValue);\n      }}\n      PopperComponent={StyledPopper}\n      ListboxComponent={ListboxComponent}\n      options={options}\n      renderInput={(params) => <TextField {...params} label={placeholder} />}\n      renderOption={(props, option, { selected }) => [props, option, selected]}\n    />\n  );\n}\n","import \"./styles.css\";\nimport datasets from \"./data/tableData\";\nimport useCsvData from \"./hooks/useCsvData\";\nimport useMultiFilter from \"./hooks/useMultiFilter\";\nimport AutocompleteDropdown from \"./MyDropdown\";\nimport DataTable from \"react-data-table-component\";\n\nconst customStyles = {\n  tableWrapper: {\n    style: {\n      display: \"block\",\n      height: \"100%\",\n    },\n  },\n};\n\nexport default function App() {\n  const { columns, path } = datasets.large;\n\n  const data = useCsvData(path);\n  const [filteredData, options, onFilterChange] = useMultiFilter(data, columns);\n\n  return (\n    <div className=\"App\">\n      <div className=\"filters\">\n        {columns.map((column) => (\n          <AutocompleteDropdown\n            key={column.name}\n            placeholder={column.name}\n            onChange={(filterValue) => onFilterChange(column, filterValue)}\n            options={options[column.name]}\n          />\n        ))}\n      </div>\n\n      <DataTable\n        columns={columns}\n        data={filteredData}\n        className=\"table\"\n        pagination\n        customStyles={customStyles}\n        paginationPerPage={100}\n      />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}